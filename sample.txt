let pollingInterval;
let pollingInProgress = false;
let cancelEvent = false;
let ajaxRequest;

// Function to start polling
function startTimer() {
    pollingInterval = setInterval(function () {
        if (pollingInProgress === true) {
            console.log('PushToken: Existing polling is in progress');
        } else {
            checkPushStatus();
        }
    }, initialPollingInterval);
}

// Function to check the status of the push notification
function checkPushStatus() {
    pollingInProgress = true;
    let url = "https://<%=hostURL%>" + "<%=formAction%>";
    ajaxRequest = $.ajax({
        url: url,
        method: "POST",
        data: {
            action: "poll_notification"
        },
        error: function() {
            pollingInProgress = false;
        },
        success: function(data, textStatus, jqXHR) {
            pollingInProgress = false;
            if (cancelEvent === 'CANCEL') {
                return handleIAmUnableBtn();
            }
            let x = document.createElement('div');
            x.innerHTML = data;
            if (x.querySelector('#checkstatusvalidated') != null) {
                $('#action').val('<%=OTPConstants.FORM_ACTION_OTP_VALIDATE%>');
                $('#login').submit();
                clearInterval(pollingInterval); // Stop polling when user signs in
            }
        },
        complete: function(jqXHR, textStatus) {
            pollingInProgress = false;
        }
    });
}

// Function to handle user clicking "OK" button
function handleSubmit() {
    if (ajaxRequest) {
        ajaxRequest.abort(); // Cancel the ongoing AJAX request
    }
    clearInterval(pollingInterval); // Stop the polling interval
    $("#pushbutton").prop("disabled", true);
    formobj['action'].value = '<%=OTPConstants.FORM_ACTION_SECURITYCODE%>';
    formobj.submit();
}

// Function to handle user clicking "I am unable to complete Authentication"
function handleIAmUnableBtn() {
    if (pollingInProgress === false) {
        $("#authbtn").prop("disabled", true);
        formobj['action'].value = 'otp_cancel';
        formobj.submit();
    } else {
        cancelEvent = 'CANCEL';
    }
}

// Attach event handler to the form submit button
$("#pushbutton").on('click',Â handleSubmit);
